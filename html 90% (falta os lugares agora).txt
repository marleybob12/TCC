<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Categoria - EventFlow</title>
  <link rel="icon" href="../img/logo_colorida_cortada.png" type="image/png">

  <!-- Fontes e √≠cones -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">

  <style>
  /* ============================================================
     HEADER E FOOTER iguais ao Home
  ============================================================ */
  :root { --header-height: 85px; }
  * { margin: 0; padding: 0; box-sizing: border-box; }
  body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(to bottom, #f5f9ff, #e6eeff);
    color: #1f1f1f;
    padding-top: var(--header-height);
  }

  header {
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 10;
    background: linear-gradient(135deg, rgba(156, 140, 235, 0.7), rgba(47, 120, 227, 0.7));
    backdrop-filter: blur(12px);
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    border-bottom: 1px solid rgba(255,255,255,0.2);
  }
  .header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 30px;
  }
  header .logo img { width: 190px; }

  header nav ul {
    display: flex;
    align-items: center;
    gap: 20px;
    list-style: none;
  }
  header nav a {
    text-decoration: none;
    color: #fff;
    font-weight: 600;
    padding: 8px 12px;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }
  header nav a:hover { background-color: rgba(0,86,210,0.8); }

  .user-dropdown { position: relative; display: inline-block; }
  .user-account {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 6px 12px;
    border-radius: 30px;
    background: rgba(255,255,255,0.1);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(255,255,255,0.2);
    cursor: pointer;
  }
  .user-account img {
    width: 36px; height: 36px; border-radius: 50%;
    object-fit: cover; border: 2px solid white;
  }
  .user-name { font-weight: 500; color: white; font-size: 16px; }
  .arrow { color: white; font-size: 14px; }
  .dropdown-menu {
    position: absolute; right: 0; top: 120%;
    background: rgba(255,255,255,0.15);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.2);
    border-radius: 12px;
    display: none;
    flex-direction: column;
    min-width: 150px;
  }
  .dropdown-menu a {
    color: rgb(39,171,211);
    text-decoration: none;
    padding: 10px 15px;
    font-size: 15px;
  }
  .dropdown-menu a:hover { background: rgba(255,255,255,0.3); }

  footer {
    background: rgba(47,120,227,0.85);
    backdrop-filter: blur(10px);
    color: #fff;
    padding: 40px 20px;
    text-align: center;
    margin-top: 60px;
    border-top: 1px solid rgba(255,255,255,0.2);
  }
  .footer-container { display:flex; justify-content:center; flex-wrap:wrap; gap:30px; }
  .footer-section h3 { margin-bottom:10px; }
  .copyright { margin-top:20px; font-size:0.9rem; color:#ffffffcc; }

  /* --- conte√∫do da categoria --- */
  .main-container { max-width: 1200px; margin: auto; padding: 20px; }
  .categoria-header h1 { color: #1673ff; margin-bottom: 20px; }
  .cards-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 20px;
  }
  .card-glass {
    background: rgba(255,255,255,0.15);
    backdrop-filter: blur(8px);
    border-radius: 12px;
    border: 1px solid rgba(255,255,255,0.2);
    box-shadow: 0 6px 15px rgba(0,0,0,0.12);
    padding: 12px;
    text-align: center;
    transition: transform .2s;
  }
  .card-glass:hover { transform: translateY(-4px); }
  .card-glass img {
    width: 100%;
    height: 160px;
    object-fit: cover;
    border-radius: 10px;
  }
  .card-content h3 { color: #1673ff; margin: 8px 0; font-size: 1rem; }
  .card-content p { font-size: 0.9rem; }

  .no-events, .error-msg { text-align: center; font-size: 1.1rem; color: #555; }

  @media (max-width:768px) {
    .header-container { flex-direction: column; gap: 10px; }
    header nav ul { flex-wrap: wrap; justify-content: center; }
  }
  </style>
</head>
<body>
  <!-- HEADER -->
  <header>
    <div class="header-container">
      <a href="home.html" class="logo"><img src="../img/logo_barra.png" alt="EventFlow"></a>
      <nav>
        <ul>
          <li><a href="criarEvento.html">Criar eventos</a></li>
          <li><a href="meusIngressos.html">Meus ingressos</a></li>
          <li><a href="meusEventos.html">Meus eventos</a></li>
          <li><a href="home.html">EventFlow</a></li>
          <li>
            <div class="user-dropdown">
              <div class="user-account" onclick="toggleDropdown()">
                <img src="https://cdn-icons-png.flaticon.com/512/847/847969.png" alt="Conta">
                <span class="user-name">Usu√°rio</span>
                <span class="arrow">‚ñæ</span>
              </div>
              <div class="dropdown-menu" id="dropdown">
                <a href="perfil.html">üë§ Perfil</a>
                <a href="config.html">‚öôÔ∏è Configura√ß√µes</a>
                <a href="#" id="dropdownLogout">üö™ Sair</a>
              </div>
            </div>
          </li>
        </ul>
      </nav>
    </div>
  </header>

  <!-- MAIN -->
  <main class="main-container">
    <section class="categoria-header">
      <h1 id="tituloCategoria">Eventos</h1>
    </section>

    <section class="eventos-categoria-lista">
      <div class="cards-container"></div>
    </section>
  </main>

  <!-- FOOTER -->
  <footer>
    <div class="footer-container">
      <div class="footer-section">
        <h3>Sobre o EventFlow</h3>
        <p>Facilitando e transformando a experi√™ncia de planejar e realizar eventos.</p>
      </div>
    </div>
    <p class="copyright">&copy; 2025 EventFlow. Todos os direitos reservados.</p>
  </footer>

<!-- SCRIPT FIREBASE -->
<script type="module">
  import { db } from "../javaScript/firebaseConfig.js";
  import { collection, query, where, getDocs } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";

  const params = new URLSearchParams(window.location.search);
  const categoriaNome = params.get("nome");
  const cidade = params.get("local");
  const tituloEl = document.getElementById("tituloCategoria");

  if (categoriaNome && cidade) tituloEl.textContent = `Eventos de ${categoriaNome} ‚Äî ${cidade}`;
  else if (categoriaNome) tituloEl.textContent = `Eventos de ${categoriaNome}`;
  else if (cidade) tituloEl.textContent = `Eventos em ${cidade}`;
  else tituloEl.textContent = `Eventos`;

  const cardsContainer = document.querySelector(".cards-container");

  function formatDate(field) {
    if (!field) return "A definir";
    if (typeof field.toDate === "function") return field.toDate().toLocaleDateString("pt-BR");
    if (field.seconds) return new Date(field.seconds * 1000).toLocaleDateString("pt-BR");
    const d = new Date(field); if (!isNaN(d)) return d.toLocaleDateString("pt-BR");
    return "A definir";
  }

  async function carregarEventosPorCategoria() {
    try {
      let categoriaID = null;
      if (categoriaNome) {
        const categoriaQuery = query(collection(db, "Categoria"), where("nome", "==", categoriaNome));
        const categoriaSnap = await getDocs(categoriaQuery);
        if (categoriaSnap.empty) {
          cardsContainer.innerHTML = `<p class="no-events">Nenhuma categoria encontrada com o nome <b>${categoriaNome}</b>.</p>`;
          return;
        }
        categoriaID = categoriaSnap.docs[0].id;
      }

      const eventosCol = collection(db, "Evento");
      let eventosQuery;
      if (categoriaID && cidade) eventosQuery = query(eventosCol, where("categoriaID", "==", categoriaID), where("local", "==", cidade));
      else if (categoriaID) eventosQuery = query(eventosCol, where("categoriaID", "==", categoriaID));
      else if (cidade) eventosQuery = query(eventosCol, where("local", "==", cidade));
      else eventosQuery = query(eventosCol);

      const eventosSnap = await getDocs(eventosQuery);
      if (eventosSnap.empty) {
        const nomeExib = categoriaNome || cidade || "a categoria/consulta";
        cardsContainer.innerHTML = `<p class="no-events">Nenhum evento encontrado para <b>${nomeExib}</b>.</p>`;
        return;
      }

      cardsContainer.innerHTML = "";
      eventosSnap.forEach(docEvento => {
        const evento = docEvento.data();
        const eventoID = docEvento.id;
        const card = document.createElement("div");
        card.classList.add("card-glass");
        card.innerHTML = `
          <a href="evento.html?id=${eventoID}">
            <img src="${evento.imagemBanner || '../img/evento.jpg'}" alt="${evento.titulo || 'Evento'}" class="card-img">
            <div class="card-content">
              <h3>${evento.titulo || "Sem t√≠tulo"}</h3>
              <p><b>Data:</b> ${formatDate(evento.dataInicio)}</p>
              <p><b>Local:</b> ${evento.local || "A definir"}</p>
            </div>
          </a>`;
        cardsContainer.appendChild(card);
      });
    } catch (err) {
      console.error("Erro ao carregar eventos por categoria:", err);
      cardsContainer.innerHTML = "<p class='error-msg'>Erro ao carregar eventos.</p>";
    }
  }
  carregarEventosPorCategoria();
</script>

<script>
  // Dropdown usu√°rio
  function toggleDropdown() {
    const d = document.getElementById("dropdown");
    d.style.display = d.style.display === "block" ? "none" : "block";
  }
</script>
</body>
</html>
